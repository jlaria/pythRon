cbind(tab$algorithm, round(tab[,-1], digits = 3))
filtered = global.ret[ (global.ret$nvars==500)&(global.ret$method=="A"),]
tab = aggregate(filtered[,-(1:3)], by=list(algorithm=filtered$algorithm), mean)
#tab$err = tab$err/tab$err[tab$algorithm=="lasso"]
tab$beta_err2 = tab$beta_err2/tab$beta_err2[tab$algorithm=="lasso"]
cbind(tab$algorithm, round(tab[,-1], digits = 3))
filtered = global.ret[ (global.ret$nvars==1000)&(global.ret$method=="A"),]
tab = aggregate(filtered[,-(1:3)], by=list(algorithm=filtered$algorithm), mean)
#tab$err = tab$err/tab$err[tab$algorithm=="lasso"]
tab$beta_err2 = tab$beta_err2/tab$beta_err2[tab$algorithm=="lasso"]
cbind(tab$algorithm, round(tab[,-1], digits = 3))
load("~/Documents/Doctorado/Congresos/seio/ref/linear/seio_c/data/ZHd-1000.RData")
var(datos.test$y)
var(datos.test$y)/3
sqrt(var(datos.test$y)/3)
distg
load("/home/juank/Documents/Extras/AXA/Shiny/app/datos.indices.RData")
load("/home/juank/Documents/Extras/AXA/Informe-AXA-2018.02.22/source code/datos.indices.RData")
load("/home/juank/Documents/Extras/AXA/Elizabeth 2018.02.20/datos.indices.RData")
load("/home/juank/Documents/Extras/AXA/Shiny/app/datos.indices.RData")
View(datos.tramos)
View(datos.tramos)
require("mxnet")
require("dplyr")
require("readr")
require("mxnet")
install.packages("mxet")
install.packages("mxnet")
load("/home/juank/Downloads/simulaciones codigo Juan Carlos.RData")
data.protein = read.csv("http://kiwi.uc3m.es/datos-curso-deloitte/protein.csv")
head(data.protein)
dim(data.protein)
rownames(data.protein)
rownames(data.protein) = data.protein$Country
rownames(data.protein)
head(data.protein)
data.protein$Country = NULL
data.protein
apply(data.protein, 1)
apply(data.protein, 1, mean)
apply(data.protein, 2, mean)
apply(data.protein, 2, sd)
scale(data.protein)
data.protein = scale(data.protein)
data.protein
d = dist(data.protein)
d
hclust(d, method = "complete")
plot(hc)
plot(hc)
hc = hclust(d, method = "complete")
plot(hc)
plot(hc, hang = -1)
d = dist(data.protein)
hc = hclust(d, method = "complete")
plot(hc, hang = -1)
plot(hc, hang = -1, cex=0.8)
cutree(hc, k=2)
cutree(hc, h=5)
cut = cutree(hc, h=5)
cut
cut = cutree(hc, k=5)
cut = cutree(hc, k=5)
for (i in 1:5) {
write(paste0("Cluster ",i, ":\n",
toString(names(which(cut==i))), "\n---------------\n"), "")
}
load("/home/juank/Downloads/simulaciones codigo Juan Carlos(1).RData")
library(catR)
data("tcals")
theta = seq(-3,3,length.out = 100)
theta = seq(-3,3,length.out = 100)
probs = catR::Pi(theta, it=c(3,0,0,1))$Pi
df = data.frame(theta = theta, Pi = probs)
library(ggplot2)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(x=x), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype="dashed"), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype="dash"), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype="longdash"), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype="twodash"), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)+
scale_linetype_manual()
ggplot(data=df, aes(x=theta, y=Pi))+geom_line(linetype=1)+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)+
scale_linetype_manual()
ggplot(data=df, aes(x=theta, y=Pi))+geom_line(linetype=1)+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype=2), show.legend = F)+
scale_linetype_manual()
ggplot(data=df, aes(x=theta, y=Pi))+geom_line(linetype="1")+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype="2"), show.legend = F)+
scale_linetype_manual()
ggplot(data=df, aes(x=theta, y=Pi))+geom_line(linetype="1")+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype=factor(2)), show.legend = F)+
scale_linetype_manual()
ggplot(data=df, aes(x=theta, y=Pi))+geom_line(linetype=factor(1))+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype=factor(2)), show.legend = F)+
scale_linetype_manual()
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)+
scale_linetype_manual()+
scale_linetype_manual(values=c("twodash","longdash","dotted","solid"))
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
scale_linetype_manual(values=c("twodash","longdash","dotted","solid"))+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
scale_linetype_manual(values=c("dotted","solid"))+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line(linetype=1)+
scale_linetype_manual(values=c("dotted","solid"))+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype=2), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line(linetype=1)+
scale_linetype_continuous()+
geom_vline(data=data.frame(x=0), aes(xintercept=x, linetype=2), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)+
)))
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
scale_linetype_manual(values=c("dotted","solid"))+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)+
geom_line(data=data.frame(x=c(-3, 3), y=c(-8.5, 10.5)), aes(x=x, y=y))
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
scale_linetype_manual(values=c("dotted","solid"))+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
scale_linetype_manual(values=c("dotted","solid"))+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)+
geom_line(data=data.frame(x=c(-0.5/3, 0.5/3), y=c(0, 1)), aes(x=x, y=y))
ggplot(data=df, aes(x=theta, y=Pi))+geom_line()+
scale_linetype_manual(values=c("dotted","solid"))+
geom_vline(data=data.frame(x=0), aes(xintercept=x), show.legend = F)+
geom_line(data=data.frame(x=c(-0.5/1, 0.5/1), y=c(0, 1)), aes(x=x, y=y))
df = data.frame(x = theta, y = probs, method = rep("p", 100))
df1 = data.frame(x=c(0, 0), y = c(0,0.5), method=rep("b", 2))
df2 = data.frame(x=c(-0.5, 0.5), y = c(0,1), method=rep("a", 2))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+geom_line()
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X=1|theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X=1  theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X=1  theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X=1  theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X=1 | theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X=1)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P($X$=1)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(x=1)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(\x=1)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1|theta)))
demo()
demo(plotmath)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1"|"theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1 "|" theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1 group("|" theta))))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1,group("|" theta))))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(groupu(P(X==1,"|",theta))))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(group(P(X==1,"|",theta))))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1,"|",theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1 "|" theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1 | theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1 '|' theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(expression(P(X==1 ,'|', theta)))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(paste0("P(X=1|", expression(theta)))
expression(theta, 2)
demo(plotmath)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)
composite.expression <- expression(paste("f(x | ", alpha, ", ", beta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)
composite.expression <- expression(paste("P( X=1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "Within SLA", x = 1, y = 2)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.1, y = 0.25)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.5, y = 0.25)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)
theta = seq(-3,3,length.out = 100)
probs = catR::Pi(theta, it=c(1,0,0,1))$Pi
df = data.frame(x = theta, y = probs, method = rep("p", 100))
df1 = data.frame(x=c(0, 0), y = c(0,0.5), method=rep("b", 2))
df2 = data.frame(x=c(-0.5, 0.5), y = c(0,1), method=rep("a", 2))
library(ggplot2)
composite.expression <- expression(paste("P( X=1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)
theta = seq(-3,3,length.out = 100)
probs = catR::Pi(theta, it=c(1/1.7,0,0,1))$Pi
df = data.frame(x = theta, y = probs, method = rep("p", 100))
df1 = data.frame(x=c(0, 0), y = c(0,0.5), method=rep("b", 2))
df2 = data.frame(x=c(-0.5, 0.5), y = c(0,1), method=rep("a", 2))
library(ggplot2)
composite.expression <- expression(paste("P( X=1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)
theta = seq(-3,3,length.out = 100)
probs = catR::Pi(theta, it=c(3,0,0,1))$Pi
df = data.frame(x = theta, y = probs, method = rep("p", 100))
df1 = data.frame(x=c(0, 0), y = c(0,0.5), method=rep("b", 2))
df2 = data.frame(x=c(-0.5, 0.5), y = c(0,1), method=rep("a", 2))
library(ggplot2)
composite.expression <- expression(paste("P( X=1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)
theta = seq(-3,3,length.out = 100)
probs = catR::Pi(theta, it=c(4,0,0,1))$Pi
df = data.frame(x = theta, y = probs, method = rep("p", 100))
df1 = data.frame(x=c(0, 0), y = c(0,0.5), method=rep("b", 2))
df2 = data.frame(x=c(-0.5, 0.5), y = c(0,1), method=rep("a", 2))
library(ggplot2)
composite.expression <- expression(paste("P( X=1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)
composite.expression <- expression(paste("p(", theta, ") := P( X=1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)
composite.expression <- expression(paste(p[1],"(", theta, ") := P( X=1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = -0.5, y = 0.8)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = -0.25, y = 0.8)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = -0.25, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
composite.expression <- expression(paste("P( X = 1 | ", theta, " )"))
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method, size = 3))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method, size = 1))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method, size = 0.3))+
geom_line(aes(linetype=method, col=method))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method, size = 1))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method, size = 0.1))+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method), size=1)+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method), size=1)+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25, size=2)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method), size=1)+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25, size=20)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method), size=1)+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25, size=10)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method), size=1)+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25, size=6)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
ggplot(data=rbind(df, df1, df2), aes(x=x, y=y, group = method))+
geom_line(aes(linetype=method, col=method), size=1)+
scale_y_continuous(composite.expression)+
scale_x_continuous(expression(theta))+
theme(legend.position="none")+
annotate("text", label = "b=0", x = 0.25, y = 0.25)+
annotate("text", label = "a = 1", x = 0.1, y = 0.9)
#Regression Diagnostics
x=c(2,4,5,7,2)
y=c(3,4,5,6,7)
model=lm(y~x)
summary(model)
#Returns: DFBETA DFFIT COV.R COOK.D HAT INFLUENCE
influence.measures(model)
#Compute Hat Matrix
X <-cbind(1,x)
hat <- X%*%(solve(t(X)%*%X))%*%t(X)
hat
#Calculate Residuals
resid <-resid(model)
standardized <-resid(model)/sqrt(sum(resid(model)^2)/3)
studentized <-rstandard(model)
deleted <-rstudent(model)
all.resids <-cbind(resid, standardized, studentized, deleted)
all.resids
if(2==3)
print("hola")
else
if(2==3)
print("Hola")
else
a
a=1
a
a;
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T)
repeat{
a=a+1
break()
}
X = matrix(rnorm(4*6), nrow = 4, ncol = 6)
X
col.means = apply(X, 1, mean)
col.means
col.means = apply(X, 2, mean)
col.means
# col.means is a vector and it is equivalent to
for(j in 1:6){
col.means_for[j] = mean(X[,j])
}
# col.means is a vector and it is equivalent to
col.means_for = rep(0, 6) # declare it
for(j in 1:6){
col.means_for[j] = mean(X[,j])
}
col.means_for
setwd("~/Documents/Curso-Master/pythRon")
system("touch into_types_py.Rmd")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T, engine.path = list(python='~/miniconda2/bin/python'))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T, engine.path = list(python='~/miniconda2/bin/python'))
unlink('into_types_py_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T, engine.path = list(python='~/miniconda2/bin/python'))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T)
library(reticulate)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T)
library(reticulate)
use_python("~/miniconda2/bin/python")
unlink('into_types_py_cache', recursive = TRUE)
unlink('into_types_py_cache', recursive = TRUE)
unlink('into_types_py_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width = 5, fig.height = 5, fig.align = 'center', eval = T, collapse = T)
empty = vector()
object.size(empty)
a = 1
object.size(a)
unlink('into_types_py_cache', recursive = TRUE)
